{"version":3,"sources":["components/Footer/Footer.tsx","images/user.png","images/image2.png","common/apis/MovieApi.tsx","common/apis/MovieApiKey.tsx","features/movies/movieSlice.tsx","components/Header/Header.tsx","images/noImage.png","components/MovieCard/MovieCard.tsx","settings.tsx","components/MovieListing/MovieListing.tsx","components/Home/Home.tsx","components/MovieDetail/MovieDetail.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","features/store.tsx","index.tsx"],"names":["Footer","className","axios","create","baseURL","APIkey","fetchAsyncMovies","createAsyncThunk","a","movieText","MovieApi","get","response","data","fetchAsyncShows","showText","fetchAsyncDetails","id","movieSlice","createSlice","name","initialState","movies","shows","details","loading","reducers","removeDetails","state","extraReducers","builder","addCase","pending","console","log","fulfilled","payload","rejected","actions","getAllMovies","getAllShows","getDetails","getLoadingState","Header","useState","input","setInput","dispatch","useDispatch","to","src","image2","alt","onSubmit","e","preventDefault","alert","type","value","placeholder","onChange","target","icon","faSearch","user","MovieCard","props","loadingFlag","useSelector","imdbID","Poster","noImage","Title","Year","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","MovieListing","renderMovies","renderShows","Response","Search","map","movie","index","Error","show","Home","useEffect","MovieDetail","useParams","Object","keys","length","faStar","imdbRating","faThumbsUp","imdbVotes","faFilm","Runtime","faCalendar","Plot","Director","Actors","Genre","Language","Awards","PageNotFound","App","path","element","store","configureStore","reducer","moviesReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.143dfd52.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div>Movie App</div>\r\n      <div>Â© 2021, Movie App</div>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/user.28e44cb7.png\";","export default __webpack_public_path__ + \"static/media/image2.ee281b91.png\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.omdbapi.com\",\r\n});\r\n","export const APIkey: string = \"1ef1e20d\";","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { Params } from \"react-router-dom\";\r\nimport MovieApi from \"../../common/apis/MovieApi\";\r\nimport { APIkey } from \"../../common/apis/MovieApiKey\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface State {\r\n  movies: Object;\r\n  shows: Object;\r\n  details: any;\r\n  loading: boolean;\r\n}\r\n\r\nexport const fetchAsyncMovies = createAsyncThunk(\r\n  \"movies/fetchAsyncMovies\",\r\n  async (movieText: string = \"Mission\") => {\r\n    const response = await MovieApi.get(\r\n      `?s=${movieText}&type=movie&apikey=${APIkey}`\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchAsyncShows = createAsyncThunk(\r\n  \"movies/fetchAsyncShows\",\r\n  async (showText: string = \"Friends\") => {\r\n    const response = await MovieApi.get(\r\n      `?s=${showText}&type=series&apikey=${APIkey}`\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchAsyncDetails = createAsyncThunk(\r\n  \"movies/fetchAsyncDetails\",\r\n  async (id: any) => {\r\n    const response = await MovieApi.get(`?i=${id}&plot=full&apikey=${APIkey}`);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst initialState: State = {\r\n  movies: {},\r\n  shows: {},\r\n  details: {},\r\n  loading: false,\r\n};\r\n\r\nconst movieSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    removeDetails: (state) => {\r\n      state.details = {};\r\n    },\r\n  },\r\n  // 'Builder callback' approach required for TypeScript to correctly infer types\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAsyncMovies.pending, (state: State) => {\r\n      console.log(\"Pending\");\r\n      return { ...state, loading: true };\r\n    });\r\n\r\n    builder.addCase(fetchAsyncMovies.fulfilled, (state: State, { payload }) => {\r\n      console.log(\"Fetched Successfully\");\r\n      return { ...state, movies: payload, loading: false };\r\n    });\r\n\r\n    builder.addCase(fetchAsyncMovies.rejected, () => {\r\n      console.log(\"Rejected\");\r\n    });\r\n\r\n    builder.addCase(fetchAsyncShows.fulfilled, (state: State, { payload }) => {\r\n      console.log(\"Fetched Successfully\");\r\n      return { ...state, shows: payload, loading: false };\r\n    });\r\n\r\n    builder.addCase(\r\n      fetchAsyncDetails.fulfilled,\r\n      (state: State, { payload }) => {\r\n        console.log(\"Fetched Successfully\");\r\n        return { ...state, details: payload };\r\n      }\r\n    );\r\n  },\r\n});\r\n\r\nexport const { removeDetails } = movieSlice.actions;\r\nexport const getAllMovies = (state: RootState) => state.movies.movies;\r\nexport const getAllShows = (state: RootState) => state.movies.shows;\r\nexport const getDetails = (state: RootState) => state.movies.details;\r\nexport const getLoadingState = (state: RootState) => state.movies.loading;\r\nexport default movieSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport user from \"../../images/user.png\";\r\nimport \"./Header.scss\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport image2 from \"../../images/image2.png\";\r\n\r\nimport {\r\n  fetchAsyncMovies,\r\n  fetchAsyncShows,\r\n} from \"../../features/movies/movieSlice\";\r\nconst Header = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (input === \"\") {\r\n      return alert(\"Please enter a search term!\")\r\n    }\r\n\r\n    dispatch(fetchAsyncMovies(input));\r\n    dispatch(fetchAsyncShows(input));\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\">\r\n        <Link id=\"logo-link\" to=\"/redux-movie-app/\">\r\n          <img id='logo-image' src={image2} alt=\"logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"search-bar\">\r\n        <form onSubmit={submitHandler}>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            placeholder=\"Search...\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setInput(e.target.value)\r\n            }\r\n          />\r\n          <button type=\"submit\">\r\n            <FontAwesomeIcon id=\"search\" icon={faSearch} />\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"user-image\">\r\n        <img src={user} alt=\"user\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/noImage.b21add8f.png\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getLoadingState } from \"../../features/movies/movieSlice\";\r\nimport \"./MovieCard.scss\";\r\nimport noImage from \"../../images/noImage.png\";\r\n\r\ninterface Props {\r\n  key: number;\r\n  data: MovieData;\r\n}\r\n\r\ninterface MovieData {\r\n  Poster: string;\r\n  Title: string;\r\n  Type: string;\r\n  Year: string;\r\n  imdbID: string;\r\n}\r\n\r\nconst MovieCard = (props: Props) => {\r\n  const data = props.data;\r\n  const loadingFlag = useSelector(getLoadingState);\r\n\r\n  return (\r\n    <div key={data.Title} className=\"card-item\">\r\n      {loadingFlag ? (\r\n        <div className=\"card-inner\"></div>\r\n      ) : (\r\n        <>\r\n          <Link to={`/redux-movie-app/movie/${data.imdbID}`}>\r\n            <div className=\"card-inner\">\r\n              <div className=\"card-top\">\r\n                {data.Poster == \"N/A\" ? (\r\n                  <img id=\"no-image\" src={noImage} alt=\"No image\" />\r\n                ) : (\r\n                  <img src={data.Poster} alt={data.Title} />\r\n                )}\r\n              </div>\r\n              <div className=\"card-bottom\">\r\n                <div className=\"card-info\">\r\n                  <h4>{data.Title}</h4>\r\n                  <p>{data.Year}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","export const settings = {\r\n  dots: false,\r\n  infinite: true,\r\n  speed: 500,\r\n  slidesToShow: 6,\r\n  slidesToScroll: 3,\r\n  initialSlide: 0,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1500,\r\n      settings: {\r\n        slidesToShow: 5,\r\n        slidesToScroll: 4,\r\n        infinite: true,\r\n        dots: false,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 1300,\r\n      settings: {\r\n        slidesToShow: 4,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: false,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: false,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAllMovies, getAllShows } from \"../../features/movies/movieSlice\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\nimport \"./MovieListing.scss\";\r\nimport { settings } from \"../../settings\";\r\n\r\ninterface Data {\r\n  Poster: string;\r\n  Title: string;\r\n  Type: string;\r\n  Year: string;\r\n  imdbID: string;\r\n}\r\n\r\nconst MovieListing = () => {\r\n  const movies: any = useSelector(getAllMovies);\r\n  const shows: any = useSelector(getAllShows);\r\n  console.log(movies);\r\n\r\n  let renderMovies,\r\n    renderShows: string | JSX.Element = \"\";\r\n\r\n  if (movies.Response === \"True\") {\r\n    renderMovies = movies.Search.map((movie: Data, index: number) => {\r\n      return <MovieCard key={index} data={movie} />;\r\n    });\r\n  } else {\r\n    renderMovies = <div className=\"movies-error\">{movies.Error}</div>;\r\n  }\r\n\r\n  if (shows.Response === \"True\") {\r\n    renderShows = shows.Search.map((show: Data, index: number) => {\r\n      return <MovieCard key={index} data={show} />;\r\n    });\r\n  } else {\r\n    renderShows = <div className=\"shows-error\">{shows.Error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-wrapper\">\r\n      <div className=\"movie-list\">\r\n        <h2>Movies</h2>\r\n        <div className=\"movie-container\">\r\n          <Slider {...settings}>{renderMovies}</Slider>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"show-list\">\r\n        <h2>Shows</h2>\r\n        <div className=\"movie-container\">\r\n          <Slider {...settings}>{renderShows}</Slider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieListing;\r\n","import React, { useEffect } from \"react\";\r\nimport MovieListing from \"../MovieListing/MovieListing\";\r\nimport \"./Home.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchAsyncMovies,\r\n  fetchAsyncShows\r\n} from \"../../features/movies/movieSlice\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAsyncMovies());\r\n    dispatch(fetchAsyncShows());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <MovieListing />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { Params, useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchAsyncDetails,\r\n  getDetails,\r\n  removeDetails,\r\n} from \"../../features/movies/movieSlice\";\r\nimport {\r\n  faStar,\r\n  faThumbsUp,\r\n  faFilm,\r\n  faCalendar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./MovieDetail.scss\";\r\nimport noImage from \"../../images/noImage.png\"\r\n\r\nconst MovieDetail = () => {\r\n  const { imdbID } = useParams();\r\n  const dispatch = useDispatch();\r\n  const data = useSelector(getDetails);\r\n  console.log(data);\r\n  useEffect(() => {\r\n    dispatch(fetchAsyncDetails(imdbID));\r\n\r\n    return () => {\r\n      dispatch(removeDetails());\r\n    };\r\n  }, [dispatch, imdbID]);\r\n  return (\r\n    <div key={data.Title} className=\"movie-section\">\r\n      {Object.keys(data).length === 0 ? (\r\n        <div>Fetching...</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"left-section\">\r\n            <div className=\"movie-title\">{data.Title}</div>\r\n            <div className=\"movie-stats\">\r\n              <div className=\"stat-box\">\r\n                IMDB Rating<FontAwesomeIcon id=\"star\" icon={faStar} />\r\n                {data.imdbRating}\r\n              </div>\r\n              <div className=\"stat-box\">\r\n                IMDB Votes<FontAwesomeIcon id=\"thumbs-up\" icon={faThumbsUp} />\r\n                {data.imdbVotes}\r\n              </div>\r\n              <div className=\"stat-box\">\r\n                Runtime<FontAwesomeIcon id=\"film\" icon={faFilm} />\r\n                {data.Runtime}\r\n              </div>\r\n              <div className=\"stat-box\">\r\n                Year <FontAwesomeIcon id=\"calendar\" icon={faCalendar} />\r\n                {data.Year}\r\n              </div>\r\n            </div>\r\n            <div className=\"movie-plot\">{data.Plot}</div>\r\n            <div className=\"movie-info\">\r\n              <div>\r\n                <span>Director</span>\r\n                <div>{data.Director}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"movie-info\">\r\n              <div>\r\n                <span>Stars</span>\r\n                <div>{data.Actors}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"movie-info\">\r\n              <div>\r\n                <span>Genres</span>\r\n                <div>{data.Genre}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"movie-info\">\r\n              <div>\r\n                <span>Languages</span>\r\n                <div>{data.Language}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"movie-info\">\r\n              <div>\r\n                <span>Awards</span>\r\n                <div>{data.Awards}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right-section\">\r\n            <div className=\"movie-image\">\r\n            {data.Poster == \"N/A\" ? (\r\n              <img id=\"no-image\" src={noImage} alt=\"No image\" />\r\n            ) : (\r\n              <img src={data.Poster} alt={data.Title} />\r\n            )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;","import React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n  return <div>PageNotFound</div>;\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Home from \"./components/Home/Home\";\r\nimport MovieDetail from \"./components/MovieDetail/MovieDetail\";\r\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\r\n\r\n/* \r\n  TO-DO:\r\n  - Add loader animation for normal search and loading movie details\r\n  - Nicer colours styling overall\r\n*/\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path=\"/redux-movie-app/\" element={<Home />} />\r\n          <Route\r\n            path=\"/redux-movie-app/movie/:imdbID\"\r\n            element={<MovieDetail />}\r\n          />\r\n          <Route path=\"/redux-movie-app/*\" element={<PageNotFound />} />\r\n        </Routes>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport moviesReducer from \"./movies/movieSlice\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    movies: moviesReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { store } from \"./features/store\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}