{"version":3,"sources":["components/Footer/Footer.tsx","images/user.png","components/Header/Header.tsx","common/apis/MovieApi.tsx","common/apis/MovieApiKey.tsx","features/movies/movieSlice.tsx","components/MovieCard/MovieCard.tsx","components/MovieListing/MovieListing.tsx","components/Home/Home.tsx","components/MovieDetail/MovieDetail.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","features/store.tsx","index.tsx"],"names":["Footer","className","Header","to","src","user","alt","axios","create","baseURL","APIkey","fetchAsyncMovies","createAsyncThunk","a","MovieApi","get","response","data","fetchAsyncShows","fetchAsyncDetails","id","movieSlice","createSlice","name","initialState","movies","shows","details","reducers","addMovies","state","payload","extraReducers","builder","addCase","pending","console","log","fulfilled","rejected","getAllMovies","actions","getAllShows","getDetails","MovieCard","props","imdbID","Poster","Title","Year","MovieListing","useSelector","renderMovies","renderShows","Response","Search","map","movie","index","Error","show","Home","dispatch","useDispatch","useEffect","MovieDetail","useParams","icon","faStar","imdbRating","faThumbsUp","imdbVotes","faFilm","Runtime","faCalendar","Plot","Director","Actors","Genre","Language","Awards","PageNotFound","App","path","element","store","configureStore","reducer","moviesReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.264383d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div>Movie App</div>\r\n      <div>Â© 2021, Movie App</div>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/user.28e44cb7.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport user from \"../../images/user.png\";\r\nimport \"./Header.scss\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/redux-movie-app/\">\r\n        <div className=\"logo\">Movie App</div>\r\n      </Link>\r\n      <div className=\"user-image\">\r\n        <img src={user} alt=\"user\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.omdbapi.com\",\r\n});\r\n","export const APIkey: string = \"1ef1e20d\";","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { Params } from \"react-router-dom\";\r\nimport MovieApi from \"../../common/apis/MovieApi\";\r\nimport { APIkey } from \"../../common/apis/MovieApiKey\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface State {\r\n  movies: Object;\r\n  shows: Object;\r\n  details: any;\r\n}\r\n\r\nconst movieText: string = \"Cars\";\r\nconst showText: string = \"Cars\";\r\n\r\nexport const fetchAsyncMovies = createAsyncThunk(\r\n  \"movies/fetchAsyncMovies\",\r\n  async () => {\r\n    const response = await MovieApi.get(\r\n      `?s=${movieText}&type=movie&apikey=${APIkey}`\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchAsyncShows = createAsyncThunk(\r\n  \"movies/fetchAsyncShows\",\r\n  async () => {\r\n    const response = await MovieApi.get(\r\n      `?s=${showText}&type=series&apikey=${APIkey}`\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchAsyncDetails = createAsyncThunk(\r\n  \"movies/fetchAsyncDetails\",\r\n  async (id: any) => {\r\n    const response = await MovieApi.get(\r\n      `?i=${id}&plot=full&apikey=${APIkey}`\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst initialState: State = {\r\n  movies: {},\r\n  shows: {},\r\n  details: {}\r\n};\r\n\r\nconst movieSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addMovies: (state, { payload }) => {\r\n      state.movies = payload;\r\n    },\r\n  },\r\n  // 'Builder callback' approach required for TypeScript to correctly infer types\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAsyncMovies.pending, () => {\r\n      console.log(\"Pending\");\r\n    });\r\n\r\n    builder.addCase(fetchAsyncMovies.fulfilled, (state: State, { payload }) => {\r\n      console.log(\"Fetched Successfully\");\r\n      return { ...state, movies: payload };\r\n    });\r\n\r\n    builder.addCase(fetchAsyncMovies.rejected, () => {\r\n      console.log(\"Rejected\");\r\n    });\r\n\r\n    builder.addCase(fetchAsyncShows.fulfilled, (state: State, { payload }) => {\r\n      console.log(\"Fetched Successfully\");\r\n      return { ...state, shows: payload };\r\n    });\r\n\r\n    builder.addCase(fetchAsyncDetails.fulfilled, (state: State, { payload }) => {\r\n      console.log(\"Fetched Successfully\");\r\n      return { ...state, details: payload };\r\n    });\r\n  },\r\n});\r\n\r\nexport const { addMovies } = movieSlice.actions;\r\nexport const getAllMovies = (state: RootState) => state.movies.movies;\r\nexport const getAllShows = (state: RootState) => state.movies.shows;\r\nexport const getDetails = (state: RootState) => state.movies.details;\r\nexport default movieSlice.reducer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MovieCard.scss\"\r\n\r\ninterface Props {\r\n  key: number;\r\n  data: MovieData;\r\n}\r\n\r\ninterface MovieData {\r\n  Poster: string;\r\n  Title: string;\r\n  Type: string;\r\n  Year: string;\r\n  imdbID: string;\r\n}\r\n\r\nconst MovieCard = (props: Props) => {\r\n  const data = props.data;\r\n  return (\r\n    <div className=\"card-item\">\r\n      <Link to={`/redux-movie-app/movie/${data.imdbID}`} >\r\n      <div className=\"card-inner\">\r\n        <div className=\"card-top\">\r\n          <img src={data.Poster} alt={data.Title} />\r\n        </div>\r\n        <div className=\"card-bottom\">\r\n          <div className=\"card-info\">\r\n            <h4>{data.Title}</h4>\r\n            <p>{data.Year}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAllMovies, getAllShows } from \"../../features/movies/movieSlice\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\nimport \"./MovieListing.scss\";\r\n\r\ninterface Data {\r\n  Poster: string;\r\n  Title: string;\r\n  Type: string;\r\n  Year: string;\r\n  imdbID: string;\r\n}\r\n\r\nconst MovieListing = () => {\r\n  const movies: any = useSelector(getAllMovies);\r\n  const shows: any = useSelector(getAllShows);\r\n  console.log(movies);\r\n\r\n  let renderMovies,\r\n    renderShows: string | JSX.Element = \"\";\r\n\r\n  if (movies.Response === \"True\") {\r\n    renderMovies = movies.Search.map((movie: Data, index: number) => {\r\n      return <MovieCard key={index} data={movie} />;\r\n    });\r\n  } else {\r\n    renderMovies = <div className=\"movies-error\">{movies.Error}</div>;\r\n  }\r\n\r\n  if (shows.Response === \"True\") {\r\n    renderShows = shows.Search.map((show: Data, index: number) => {\r\n      return <MovieCard key={index} data={show} />;\r\n    });\r\n  } else {\r\n    renderShows = <div className=\"shows-error\">{shows.Error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-wrapper\">\r\n      <div className=\"movie-list\">\r\n        <h2>Movies</h2>\r\n        <div className=\"movie-container\">{renderMovies}</div>\r\n      </div>\r\n\r\n      <div className=\"show-list\">\r\n        <h2>Shows</h2>\r\n        <div className=\"movie-container\">{renderShows}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieListing;\r\n","import React, { useEffect } from \"react\";\r\nimport MovieListing from \"../MovieListing/MovieListing\";\r\nimport \"./Home.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchAsyncMovies,\r\n  fetchAsyncShows,\r\n} from \"../../features/movies/movieSlice\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAsyncMovies());\r\n    dispatch(fetchAsyncShows());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"banner-img\"></div>\r\n      <MovieListing />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { Params, useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAsyncDetails, getDetails } from \"../../features/movies/movieSlice\";\r\nimport { faStar, faThumbsUp, faFilm, faCalendar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./MovieDetail.scss\"\r\n\r\nconst MovieDetail = () => {\r\n  const {imdbID} = useParams();\r\n  const dispatch = useDispatch();\r\n  const data = useSelector(getDetails)\r\n  console.log(data)\r\n  useEffect(() => {\r\n    dispatch(fetchAsyncDetails(imdbID))\r\n  }, [dispatch, imdbID])\r\n  return (\r\n    <div className=\"movie-section\">\r\n      <div className=\"left-section\">\r\n        <div className=\"movie-title\">{data.Title}</div>\r\n        <div className=\"movie-stats\">\r\n          <span>\r\n            IMDB Rating <FontAwesomeIcon id='star' icon={faStar} /> : {data.imdbRating}\r\n          </span>\r\n          <span>\r\n            IMDB Votes <FontAwesomeIcon id='thumbs-up' icon={faThumbsUp} /> : {data.imdbVotes}\r\n          </span>\r\n          <span>\r\n            Runtime <FontAwesomeIcon id='film' icon={faFilm} /> : {data.Runtime}\r\n          </span>\r\n          <span>\r\n            Year <FontAwesomeIcon id='calendar' icon={faCalendar} /> : {data.Year}\r\n          </span>\r\n        </div>\r\n        <div className=\"movie-plot\">{data.Plot}</div>\r\n        <data className=\"movie-info\">\r\n          <div>\r\n            <span>Director</span>\r\n            <span>{data.Director}</span>\r\n          </div>\r\n        </data>\r\n        <data className=\"movie-info\">\r\n          <div>\r\n            <span>Stars</span>\r\n            <span>{data.Actors}</span>\r\n          </div>\r\n        </data>\r\n        <data className=\"movie-info\">\r\n          <div>\r\n            <span>Genres</span>\r\n            <span>{data.Genre}</span>\r\n          </div>\r\n        </data>\r\n        <data className=\"movie-info\">\r\n          <div>\r\n            <span>Languages</span>\r\n            <span>{data.Language}</span>\r\n          </div>\r\n        </data>\r\n        <data className=\"movie-info\">\r\n          <div>\r\n            <span>Awards</span>\r\n            <span>{data.Awards}</span>\r\n          </div>\r\n        </data>\r\n      </div>\r\n      <div className=\"right-section\">\r\n        <div className=\"movie-image\">\r\n          <img src={data.Poster} alt={data.Title} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n  return <div>PageNotFound</div>;\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Home from \"./components/Home/Home\";\r\nimport MovieDetail from \"./components/MovieDetail/MovieDetail\";\r\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path=\"/redux-movie-app/\" element={<Home />} />\r\n          <Route path=\"/redux-movie-app/movie/:imdbID\" element={<MovieDetail />} />\r\n          <Route path=\"/redux-movie-app/*\" element={<PageNotFound />} />\r\n        </Routes>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport moviesReducer from \"./movies/movieSlice\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    movies: moviesReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { store } from \"./features/store\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}